var m=Object.defineProperty;var p=(d,e,t)=>e in d?m(d,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):d[e]=t;var o=(d,e,t)=>(p(d,typeof e!="symbol"?e+"":e,t),t);import{R as T,T as L,c as v,U as w,P as c,b as y,e as S}from"./Tileset.96cf75fd.js";class x extends S{constructor(){super(...arguments);o(this,"layers",[]);o(this,"tiles",[])}undo(t){super.undo(t);for(let s of this.layers)t.layers.splice(s.i,0,s.layer);for(let s of this.tiles){const i=s.loc.toString();s.from===void 0?delete t.layers[s.layer].tiles[i]:t.layers[s.layer].tiles[i]=s.from}}redo(t){super.redo(t);for(let s of this.layers)t.layers.splice(s.i,1);for(let s of this.tiles){const i=s.loc.toString();s.to===void 0?delete t.layers[s.layer].tiles[i]:t.layers[s.layer].tiles[i]=s.to}}}class f{constructor(){o(this,"name","");o(this,"tileset",new L);o(this,"layers",[{name:"Layer 1",visible:!0,tiles:{}}]);o(this,"tiledata",new v);o(this,"selectedLayer",0);o(this,"selectedTiles",[]);o(this,"undoer",new w(x))}set(e,t){if(t||(t=this.tileset.randSelectedTile()),!t)return;const s=e.toString();this.undoer.push().tiles.push({layer:this.selectedLayer,loc:e,from:this.layers[this.selectedLayer].tiles[s],to:t}),this.layers[this.selectedLayer].tiles[s]=t}fill(e,t=10){if(this.layers[this.selectedLayer].tiles[e.toString()])return;const s=this.undoer.push();if(this.selectedTiles.length>0){for(let l of this.selectedTiles){const r=this.tileset.randSelectedTile();if(!r)return;const a=l.toString();s.tiles.push({layer:this.selectedLayer,loc:l,from:this.layers[this.selectedLayer].tiles[a],to:r}),this.layers[this.selectedLayer].tiles[a]=r}return}const i=[e];for(;i.length>0;){const l=i.shift();if(!l)return;const r=this.tileset.randSelectedTile();if(!r)return;const a=l.toString();s.tiles.push({layer:this.selectedLayer,loc:l,from:this.layers[this.selectedLayer].tiles[a],to:r}),this.layers[this.selectedLayer].tiles[a]=r;for(let n of[[1,0],[-1,0],[0,1],[0,-1]]){const h=l.add(n[0],n[1]);e.dist(h)<t&&(this.layers[this.selectedLayer].tiles[h.toString()]||i.push(h))}}}erase(e){if(this.selectedTiles.length>0){const i=this.undoer.push();for(let l of this.selectedTiles){const r=l.toString();i.tiles.push({layer:this.selectedLayer,loc:l,from:this.layers[this.selectedLayer].tiles[r],to:void 0}),delete this.layers[this.selectedLayer].tiles[r]}return}const t=e.toString();this.undoer.push().tiles.push({layer:this.selectedLayer,loc:e,from:this.layers[this.selectedLayer].tiles[t],to:void 0}),delete this.layers[this.selectedLayer].tiles[t]}clear(){this.undoer.begin();for(let e of this.selectedTiles)this.erase(e);this.undoer.end()}addLayer(){this.layers.push({name:`Layer ${this.layers.length+1}`,visible:!0,tiles:{}})}removeLayer(e){this.undoer.push().layers.push({i:e,layer:this.layers.splice(e,1)[0]})}undo(){this.undoer.undo(this)}redo(){this.undoer.redo(this)}setDoor(e,t){const s=this.tiledata.get(e,"door",void 0),i=this.tiledata.get(t,"door",void 0);s&&this.tiledata.set(s,"door",void 0),i&&this.tiledata.set(i,"door",void 0),e.equals(t)?(this.tiledata.set(e,"door",void 0),this.tiledata.set(t,"door",void 0)):(this.tiledata.set(e,"door",t.clone()),this.tiledata.set(t,"door",e.clone()))}clearSelectedTiles(){this.selectedTiles=[]}addSelectedTile(e){this.selectedTiles.findIndex(s=>s.equals(e))===-1&&this.selectedTiles.push(e.clone())}setSelectedTile(e){this.selectedTiles=[e]}toggleSelectedTile(e){const t=this.selectedTiles.findIndex(s=>s.equals(e));t!==-1?this.selectedTiles.splice(t,1):this.selectedTiles.push(e.clone())}drawLayer(e,t){for(let[s,i]of Object.entries(t.tiles).sort((l,r)=>{const[a,n]=[c.from(l[0]),c.from(r[0])];return a.y===n.y?a.x-n.x:a.y-n.y}))this.tileset.drawTile(e,c.from(s),i)}image(){let[e,t,s,i]=[1/0,-1/0,1/0,-1/0];for(let a of this.layers)for(let n of Object.keys(a.tiles)){const[h,u]=n.split(",").map(g=>parseInt(g));e=Math.min(e,h),t=Math.max(t,h),s=Math.min(s,u),i=Math.max(i,u)}const l=document.createElement("canvas");l.width=this.tileset.tilewidth*(Math.abs(t-e)+1),l.height=this.tileset.tileheight*(Math.abs(i-s)+1);const r=l.getContext("2d");if(!r)throw"cannot create ctx from canvas";r.setTransform(1,0,0,1,-e*this.tileset.tilewidth,-s*this.tileset.tileheight);for(let a of this.layers)this.drawLayer(r,a);return l}png(){return new y(this.name,{name:this.name,layers:this.layers,tileset:this.tileset,tiledata:this.tiledata},this.image())}download(){this.png().download()}static async from(e){let t;e instanceof File?t=await y.fromFile(e):t=new y("",{},e);const s=new f;return Object.assign(s,t.metadata),s.tileset instanceof Promise&&(s.tileset=await s.tileset),s}}T(f);export{f as T};
